root: true
env:
  node: true
  es2020: true
extends:
  - eslint:recommended
  - plugin:@typescript-eslint/eslint-recommended
  - plugin:@typescript-eslint/recommended
  - plugin:import/recommended
  - plugin:import/typescript
  - prettier
plugins:
  - '@typescript-eslint'
  - import
  - unused-imports
settings:
  import/resolver:
    typescript:
      config: tsconfig.json
      alwaysTryTypes: true
overrides:
  - files: ['index.ts', 'src/**/*.ts']
    parser: '@typescript-eslint/parser'
    parserOptions:
      project: tsconfig.json
      ecmaVersion: 2020
      sourceType: module
    rules:
      import/default: 'off'
      import/no-named-as-default-member: 'off'
      import/order:
        - error
        - groups:
            [
              'builtin',
              'external',
              'internal',
              'index',
              'object',
              'parent',
              'sibling',
            ]
          newlines-between: always
          alphabetize:
            order: asc
      unused-imports/no-unused-imports: 'error'
      '@typescript-eslint/no-explicit-any': 'error'
      '@typescript-eslint/no-unused-vars': 'off'
      no-console:
        - error
        - allow: ['warn', 'error', 'info']
  - files: ['*.ts']
    rules:
      no-unused-vars: off
      '@typescript-eslint/no-unused-vars':
        - error
        - vars: 'all'
          args: 'after-used'
          ignoreRestSiblings: false
          argsIgnorePattern: '^_'
      '@typescript-eslint/naming-convention':
        - error
        - selector: 'interface'
          format: ['PascalCase']
          custom: { regex: '^I[A-Z]', match: true }
        - selector: 'variable'
          format: ['camelCase', 'UPPER_CASE', 'PascalCase']
        - selector: 'parameter'
          format: ['camelCase']
          leadingUnderscore: 'allow'
